#! /bin/sh

export REDECLIPSE_BRANCH=_BRANCH_
cd $(dirname $(readlink -f $0))/usr/bin/

UC=0
SERVER=no
TEMP_D="$(mktemp -d)"
TEMP_U="$TEMP_D/u.sh"
TEMP_E="$TEMP_D/e"

cleanup() {
    rm -r "$TEMP_D"
    echo "done"
    exit
}

trap "cleanup" 0 2 3 15

updatecommand() {
    echo "$@" > "$TEMP_U"
    echo "echo \$? > \"\$TEMP_E\"" >> "$TEMP_U"
    export TEMP_E
    if tty > /dev/null || [ -n "$REDECLIPSE_APPIMAGE_NOTERM" ]; then
        eval /bin/sh "$TEMP_U"
    else
        if [ -n "$REDECLIPSE_APPIMAGE_TERM" ]; then
            eval "$REDECLIPSE_APPIMAGE_TERM" -e /bin/sh "$TEMP_U"
        elif which xterm > /dev/null; then
            xterm -e /bin/sh "$TEMP_U"
        elif which x-terminal-emulator > /dev/null; then
            x-terminal-emulator -e /bin/sh "$TEMP_U"
        else
            eval /bin/sh "$TEMP_U"
        fi
    fi
    return $(cat "$TEMP_E")
}

if [ -n "$REDECLIPSE_APPIMAGE_NO_UPDATE" ]; then
    if [ "$SERVER" = "no" ]; then
        ./redeclipse $@
    else
        ./redeclipse-server $@
    fi
else
    OLD_CWD="$(pwd)"
    cd "$TEMP_D"
    updatecommand "$OLD_CWD/appimageupdatetool.AppImage" "$APPIMAGE"
    [ -e "$APPIMAGE.zs-old" ] && rm "$APPIMAGE.zs-old"
    REDECLIPSE_APPIMAGE_NO_UPDATE=yes "$APPIMAGE"
fi
